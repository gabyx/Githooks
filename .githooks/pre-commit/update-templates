#!/bin/sh

if command -v "gsed" ; then
    SED="gsed"
else
    SED="sed"
fi

if [ "$(echo "a" | $SED -E 's|a|\n|')" = "n" ]; then
    echo "! Install GNU sed for updating the templates." >&2
    exit 1
fi

# Patch the hooks
HOOK_NAMES=$($SED -E '1,/ManagedHookNames.*\{/d;/\}/,$d ; s/\s+"(.*)",/\1/' githooks/hooks/githooks.go) ||
    {
        echo "update-templates:: Replacement command failed!" >&2
        exit 1
    }

for HOOK_NAME in $HOOK_NAMES; do
    # shellcheck disable=SC2015
    $SED -e "s|GITHOOKS_RUNNER=.*|GITHOOKS_RUNNER=\"\$(cd \"\$(dirname \"\$0\")/../\" \&\& pwd)/githooks/bin/runner\"|" \
        -e "s|\(various Git triggers.*\)|\1\n#\n# This file is auto-generated, do not edit!|" \
        <githooks/build/embedded/run-wrapper.sh >"hooks/$HOOK_NAME" &&
        chmod u+x "hooks/$HOOK_NAME" &&
        git add hooks/* ||
        {
            echo "Failed to update \`hooks/$HOOK_NAME\`" >&2
            exit 2
        }
done

# Delete all files not in `$HOOK_NAME`
for HOOK_FILE in hooks/*; do
    NAME=$(basename "$HOOK_FILE")
    if ! echo "$HOOK_NAMES" | grep -q "$NAME"; then
        git rm "$HOOK_FILE" >/dev/null 2>&1 || {
            echo "Failed to delete obsolete hook \`$HOOK_FILE\`" >&2
            exit 3
        }
    fi
done

echo "* Updated all hooks in 'hooks/*'" >&2
exit 0
