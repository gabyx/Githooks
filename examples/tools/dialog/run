#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys
import platform
import subprocess
import argparse
from tkinter.simpledialog import askstring
from tkinter import Tk
from tkinter import dialog


def ask(title, text, strings=('Yes', 'No'), bitmap='warning', default=0):
    """ Making a dialog windows.

    Args:
        title (str): Title of the windows
        text (str): Text to be show to the user
        strings (tuple, optional): Button strings to be shown. Defaults to ('Yes', 'No').
        bitmap (str, optional): Bitmap to use for the icon. Defaults to 'warning'.
        default (int, optional): Index of the default button. Defaults to 0.
    Returns:
        [type]: [description]
    """

    d = dialog.Dialog(title=title,
                      text=text,
                      bitmap=bitmap,
                      default=default,
                      strings=strings)
    return d.num


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='Custom user dialog.')
    subparsers = parser.add_subparsers(dest="cmd", required=True)

    parseOptions = subparsers.add_parser('options', help='Custom options dialog')
    parseOptions.add_argument('--title', help="The title of the dialog.", default="")
    parseOptions.add_argument('--text', help="The text of the dialog.", default="")
    parseOptions.add_argument('--default-option', help="The default option.", type=int, default=0)
    parseOptions.add_argument('--option', action="append", help="The default option.", required=True)

    parseEntry = subparsers.add_parser('entry', help='Custom entry dialog')
    parseEntry.add_argument('--title', help="The title of the dialog.", default="")
    parseEntry.add_argument('--text', help="The text of the dialog.", default="")
    parseEntry.add_argument('--default-entry', help="The default option.", default="")

    args = parser.parse_args()


    root = Tk()
    root.lift()
    root.attributes('-topmost', True)
    root.after_idle(root.attributes, '-topmost', False)
    root.withdraw()

    # Front most Hack for OS X
    if 'Darwin' in platform.system():  # How Mac OS X is identified by Python
        p = subprocess.Popen(
            '''sleep 0.3 && /usr/bin/osascript -e 'tell app "Finder" to set frontmost of process "python" to true' ''',
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT)

    print(args)
    if args.cmd == "options":
        ans = ask(title=args.title, text=args.text, strings=args.option, default=args.default_option)
    elif args.cmd == "entry":
        ans = askstring(args.title, args.text)
    else:
        raise "Wrong command."

    if ans is None:
        sys.exit(1)  # Canceled

    print(ans)

