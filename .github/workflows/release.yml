name: goreleaser

on:
  push:
    tags:
      # This is not a real version tag, its just used to trigger
      # the release build. Glob pattern:
      - 'prepare-v[0-9]+.[0-9]+.[0-9]+*'

env:
  BUILD_TAG: ${GITHUB_REF##*/}
  RELEASE_TAG: ${GITHUB_REF##*prepare-}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
            go-version: 1.16
      - name: Import GPG Key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          workdir: githooks
          args: release --rm-dist
        env:
          GORELEASER_CURRENT_TAG : "$RELEASE_TAG"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      - name: "Tag successful build"
        run: |
          git config user.name 'githooks-bot'
          git config user.email 'githooks-bot@users.noreply.github.com'
          git tag "$RELEASE_TAG"
          git push origin "$RELEASE_TAG"
          git push -f origin ":$BUILD_TAG"

  tagSourceCode:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Tagging Source Code
        run: |
          git config user.name 'githooks-bot'
          git config user.email 'githooks-bot@users.noreply.github.com'
          git tag "githooks/$RELEASE_TAG"
          git push --tags